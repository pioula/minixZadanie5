diff --git a/usr/src/minix/include/minix/callnr.h b/usr/src/minix/include/minix/callnr.h
index 6030687..80a0bc0 100644
--- a/usr/src/minix/include/minix/callnr.h
+++ b/usr/src/minix/include/minix/callnr.h
@@ -118,7 +118,8 @@
 #define VFS_COPYFD		(VFS_BASE + 46)
 #define VFS_CHECKPERMS		(VFS_BASE + 47)
 #define VFS_GETSYSINFO		(VFS_BASE + 48)
+#define VFS_NOTIFY		(VFS_BASE + 49)
 
-#define NR_VFS_CALLS		49	/* highest number from base plus one */
+#define NR_VFS_CALLS		50	/* highest number from base plus one */
 
 #endif /* !_MINIX_CALLNR_H */
diff --git a/usr/src/minix/include/minix/ipc.h b/usr/src/minix/include/minix/ipc.h
index 622c40d..ea0d231 100644
--- a/usr/src/minix/include/minix/ipc.h
+++ b/usr/src/minix/include/minix/ipc.h
@@ -841,6 +841,14 @@ typedef struct {
 } mess_lc_vfs_umount;
 _ASSERT_MSG_SIZE(mess_lc_vfs_umount);
 
+typedef struct {
+	int fd;
+	int event;
+
+	uint8_t data[48];
+} mess_lc_vfs_notify;
+_ASSERT_MSG_SIZE(mess_lc_vfs_notify);
+
 typedef struct {
 	void		*addr;
 	uint8_t		padding[52];
@@ -2121,6 +2129,7 @@ typedef struct {
 		mess_lc_vfs_truncate	m_lc_vfs_truncate;
 		mess_lc_vfs_umask	m_lc_vfs_umask;
 		mess_lc_vfs_umount	m_lc_vfs_umount;
+		mess_lc_vfs_notify	m_lc_vfs_notify;
 		mess_lc_vm_brk		m_lc_vm_brk;
 		mess_lc_vm_getphys	m_lc_vm_getphys;
 		mess_lc_vm_rusage	m_lc_vm_rusage;
diff --git a/usr/src/minix/servers/vfs/Makefile b/usr/src/minix/servers/vfs/Makefile
index 76a22a4..553bf11 100644
--- a/usr/src/minix/servers/vfs/Makefile
+++ b/usr/src/minix/servers/vfs/Makefile
@@ -7,7 +7,8 @@ SRCS=	main.c open.c read.c write.c pipe.c dmap.c \
 	filedes.c stadir.c protect.c time.c \
 	lock.c misc.c utility.c select.c table.c \
 	vnode.c vmnt.c request.c \
-	tll.c comm.c worker.c coredump.c
+	tll.c comm.c worker.c coredump.c \
+	notify.c
 
 .if ${MKCOVERAGE} != "no"
 SRCS+=  gcov.c
diff --git a/usr/src/minix/servers/vfs/const.h b/usr/src/minix/servers/vfs/const.h
index 0cce3cf..3f24064 100644
--- a/usr/src/minix/servers/vfs/const.h
+++ b/usr/src/minix/servers/vfs/const.h
@@ -7,6 +7,7 @@
 #define NR_MNTS           16 	/* # slots in mount table */
 #define NR_VNODES       1024	/* # slots in vnode table */
 #define NR_WTHREADS	   9	/* # slots in worker thread table */
+#define NR_NOTIFY          8	/* # slots in notify table */
 
 #define NR_NONEDEVS	NR_MNTS	/* # slots in nonedev bitmap */
 
diff --git a/usr/src/minix/servers/vfs/notify.c b/usr/src/minix/servers/vfs/notify.c
new file mode 100644
index 0000000..20e3cde
--- /dev/null
+++ b/usr/src/minix/servers/vfs/notify.c
@@ -0,0 +1,5 @@
+#include "fs.h"
+
+int do_notify(void) {
+	return(ENOSYS);  // TODO: implementacja VFS_NOTIFY
+}
diff --git a/usr/src/minix/servers/vfs/proto.h b/usr/src/minix/servers/vfs/proto.h
index 051a807..52c03bd 100644
--- a/usr/src/minix/servers/vfs/proto.h
+++ b/usr/src/minix/servers/vfs/proto.h
@@ -348,4 +348,8 @@ void worker_wait(void);
 struct worker_thread *worker_suspend(void);
 void worker_resume(struct worker_thread *org_self);
 void worker_set_proc(struct fproc *rfp);
+
+/* notify.c */
+int do_notify(void);
+
 #endif
diff --git a/usr/src/minix/servers/vfs/table.c b/usr/src/minix/servers/vfs/table.c
index 8cec7c1..b766bde 100644
--- a/usr/src/minix/servers/vfs/table.c
+++ b/usr/src/minix/servers/vfs/table.c
@@ -65,4 +65,5 @@ int (* const call_vec[NR_VFS_CALLS])(void) = {
 	CALL(VFS_COPYFD)	= do_copyfd,		/* copyfd(2) */
 	CALL(VFS_CHECKPERMS)	= do_checkperms,	/* checkperms(2) */
 	CALL(VFS_GETSYSINFO)	= do_getsysinfo,	/* getsysinfo(2) */
+	CALL(VFS_NOTIFY)	= do_notify,		/* notify() */
 };
diff --git a/usr/src/sys/sys/errno.h b/usr/src/sys/sys/errno.h
index c4ecb60..7660159 100644
--- a/usr/src/sys/sys/errno.h
+++ b/usr/src/sys/sys/errno.h
@@ -172,7 +172,9 @@
 #define	ENOLINK		(_SIGN 95 )		/* Link has been severed */
 #define	EPROTO		(_SIGN 96 )		/* Protocol error */
 
-#define	ELAST		(_SIGN 96 )		/* Must equal largest errno */
+#define	ENONOTIFY		(_SIGN 97 )		/* No more notifications available */
+
+#define	ELAST		(_SIGN 97 )		/* Must equal largest errno */
 
 #if defined(_KERNEL) || defined(_KMEMUSER)
 /* pseudo-errors returned inside kernel to modify return to process */
diff --git a/usr/src/sys/sys/fcntl.h b/usr/src/sys/sys/fcntl.h
index 6caaf29..8280f06 100644
--- a/usr/src/sys/sys/fcntl.h
+++ b/usr/src/sys/sys/fcntl.h
@@ -301,6 +301,14 @@ struct flock {
 #define	AT_REMOVEDIR		0x800	/* Remove directory only */
 #endif
 
+/*
+ * Event flags used by notify()
+ */
+#define	NOTIFY_OPEN	0x00000001	/* file is opened */
+#define	NOTIFY_TRIOPEN	0x00000002	/* file is opened >= 3 times simultaneously */
+#define	NOTIFY_CREATE	0x00000004	/* file is created in the directory */
+#define	NOTIFY_MOVE	0x00000008	/* file is moved to the directory */
+
 
 #ifndef _KERNEL
 #include <sys/cdefs.h>
